@model List<Zenvi.Models.Post>

@foreach (var post in Model)
{
    <div class="post card mb-4" style="cursor: pointer;" onclick="window.location='@Url.Action("ViewPost", "Posts", new { postId = post.Id })'">
        <div class="card-body">
            @if (post.RepliedTo != null)
            {
                <div class="reply-indicator">
                    <a href="@Url.Action("ViewPost", "Posts", new { postId = post.RepliedTo.Id })" onclick="event.stopPropagation();">
                        Replying to post by @post.RepliedTo.PostOp.Name @post.RepliedTo.PostOp.Surname
                    </a>
                </div>
            }
            <div class="post-header">
                <a asp-controller="Posts" asp-action="UserPosts" asp-route-userId="@post.PostOp.Id" onclick="event.stopPropagation();">
                    <img src="@(post.PostOp.ProfilePicture != null ? Url.Content($"~/media/{post.PostOp.ProfilePicture.Name}") : Url.Content("~/images/profile-picture-placeholder.png"))" class="profile-picture" alt="Profile Picture" />
                    <div class="post-header-info">
                        <strong>@post.PostOp.Name @post.PostOp.Surname</strong>
                        <span class="post-date">@post.CreatedAt.ToString("HH:mm - MMMM dd, yyyy")</span>
                    </div>
                </a>
            </div>
            <div class="post-content">
                @post.Content
            </div>
            @if (post.MediaContent != null && post.MediaContent.Any())
            {
                <div id="carousel-@post.Id" class="carousel slide post-media-carousel @(post.MediaContent.Count > 1 ? "" : "carousel-single")" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (var i = 0; i < post.MediaContent.Count; i++)
                        {
                            var media = post.MediaContent[i];
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                @if (media.Type.StartsWith("image"))
                                {
                                    <img src="~/media/@media.Name" alt="Post Media" class="d-block w-100 img-fluid rounded" style="aspect-ratio: 5/4; object-fit: cover;">
                                }
                                else if (media.Type.StartsWith("video"))
                                {
                                    <video controls class="d-block w-100 img-fluid rounded" style="aspect-ratio: 5/4; object-fit: cover;">
                                        <source src="~/media/@media.Name" type="@media.Type">
                                        Your browser does not support the video tag.
                                    </video>
                                }
                            </div>
                        }
                    </div>
                    @if (post.MediaContent.Count > 1)
                    {
                        <a class="carousel-control-prev" href="#carousel-@post.Id" role="button" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carousel-@post.Id" role="button" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </a>
                    }
                </div>
            }
            <div class="post-actions mt-2">
                <button class="btn like p-0" onclick="toggleLike(@post.Id, this); event.stopPropagation();">
                    <i class="far fa-thumbs-up"></i> <span class="like">Like (@post.LikeCount)</span>
                </button>
                <span class="comment" onclick="window.location='@Url.Action("ViewPost", "Posts", new { postId = post.Id })'; event.stopPropagation();"><i class="far fa-comment"></i> Reply</span>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.getElementById("mediaFiles").addEventListener("change", function () {
            var count = this.files.length;
            var text = count > 1 ? count + " files selected" : (count === 1 ? count + " file selected" : "Upload Media");
            document.getElementById("upload-text").innerText = text;
        });

        async function toggleLike(postId, button) {
            try {
                const response = await fetch('/api/LikesApi/ToggleLikePost', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify(postId)
                });

                if (response.ok) {
                    const data = await response.json();
                    const likeSpan = button.querySelector('.like');
                    if (data && data.likeCount !== undefined) {
                        likeSpan.textContent = `Like (${data.likeCount})`;
                    } else {
                        console.error('Unexpected response format:', data);
                    }
                } else {
                    console.error('Failed to toggle like:', response.status, response.statusText);
                }
            } catch (error) {
                console.error('Error toggling like:', error);
            }
        }
    </script>
}